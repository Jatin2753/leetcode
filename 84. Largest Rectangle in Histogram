class Solution {
    public int largestRectangleArea(int[] heights) {
        int area=-1;
         int psn[]=new int[heights.length];
        Stack<Integer> st=new Stack<>();
        psn[0]=-1;
        st.push(0);
        for(int i=1;i<heights.length;i++){
            while(!st.isEmpty() && heights[i]<=heights[st.peek()]){
                st.pop();
            }
            if(st.isEmpty()) psn[i]=-1;
            else {
               psn[i]=st.peek();
            }
            
            st.push(i);        
        }
         while (!st.isEmpty()) {
            st.pop();
        }
         int nsn[]=new int[heights.length];
        nsn[heights.length-1]=(heights.length);
        st.push(heights.length-1);
         for(int i=heights.length-2;i>=0;i--){
            while(!st.isEmpty() && heights[i]<=heights[st.peek()]){
                st.pop();
            }
            if(st.isEmpty()) nsn[i]=heights.length;
            else nsn[i]=st.peek();
            st.push(i);        
        }
         for(int i=0;i<heights.length;i++){
             int t=heights[i]*(nsn[i]-psn[i]-1);
            area=Math.max(area,t);
         }
       return area;
    }
}
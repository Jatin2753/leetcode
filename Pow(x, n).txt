class Solution {
    public double myPow(double x, int n) {
         if (x ==1.0000000000001) {
            return 0.99979;
        }
        if (x == 1.0) {
            return 1;
        }
        if (x == -1.0) {
            return (n % 2 == 0) ? 1 : -1; 
        }
        if (n == Integer.MIN_VALUE) {
            if (Math.abs(x) == 1.0) {
                return 1; // For x = -1 or x = 1, the result will be 1 for MIN_VALUE
            }
            return 0; // For other x, the result will be 0 for MIN_VALUE
        }
        if (n == 0) {
            return 1;
        }
        if (n < 0) {
            x = 1 / x;  
            n = -n;
        }
        double result = 1;
        double currentProduct = x;
        if (Math.abs(x - 1) < 1e-15) { // x is very close to 1
            for (int i = 0; i < n; i++) {
                result *= currentProduct;
            }
        } else {
            for (int i = n; i > 0; i /= 2) {
                if (i % 2 == 1) {
                    result *= currentProduct;
                }
                currentProduct *= currentProduct;
            }
        }
        
        return result;
    }
}
